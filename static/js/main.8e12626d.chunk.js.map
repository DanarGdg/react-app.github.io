{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Home","Fragment","Users","NoMatch","App","to","path","exact","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAsGA,SAASA,IACP,OAAO,eAAC,IAAMC,SAAP,WACL,uCACA,4DAIJ,SAASC,IACP,OAAO,wCAGT,SAASC,IACP,OAAO,sD,IAwBMC,E,uKAnBX,OACE,cAAC,IAAD,UACE,gCACE,gCACE,kCAAI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAAJ,OACA,kCAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAAJ,UAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWR,IACjC,cAAC,IAAD,CAAOM,KAAK,SAASC,OAAK,EAACC,UAAWN,IACtC,cAAC,IAAD,CAAOM,UAAWL,gB,GAbZM,aCzGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAkB1Bb,M","file":"static/js/main.8e12626d.chunk.js","sourcesContent":["//import logo from './logo.svg';\n//import List from './List.js';\n\n\n\n/*\nclass Timer extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      time : props.start\n    }\n  }\n\ncomponentDidMount(){\n  this.addInterval =  setInterval( () => this.increase(), 1000)\n}\n\ncomponentWillUnmount(){\n  clearInterval(this.addInterval)\n}\n\nincrease(){\n  this.setState((state, props) => ({\n    time : parseInt(state.time) + 1\n  }))\n}\n\n    render(){\n        return(\n          <div> {this.state.time} detik </div>\n        )\n    }\n}*/\n\n/*\nclass Toggle extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      toggleStatus:true\n    }\n    this.pengaturclick = this.pengaturclick.bind(this)\n  }\n\n  pengaturclick(){\n    this.setState(state => ({\n      toggleStatus : !state.toggleStatus\n    }))\n  }\n\n  render(){\n    return(\n      <button onClick={this.pengaturclick}>\n        {this.state.toggleStatus ? 'on' : 'off'}\n      </button>\n    )\n  }\n}\n/*\nclass Todolist extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      todoitem:'',\n      items:[]\n    }\n  }\n\n  submit = (event) =>{\n    event.preventDefault()\n    this.setState({\n      items: [...this.state.items, this.state.todoitem],\n      todoitem: ''\n    })\n  }\n\n  change = (event) => {\n    event.preventDefault()\n    this.setState({\n      todoitem: event.target.value\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.submit}>\n          <input type='text' value={this.state.todoitem} onChange={this.change} />\n          <button>Add </button>\n        </form>\n        <List items={this.state.items}/>\n      </div>\n    )\n  }\n}\n*/\nimport './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\n\n\nfunction Home(){\n  return <React.Fragment>\n    <h1>Home </h1>\n    <p>hello this is home page </p>\n   </React.Fragment>\n}\n\nfunction Users(){\n  return <h1>Users </h1>\n}\n\nfunction NoMatch(){\n  return <h1>Error 404 not found </h1>\n}\n\nclass App extends Component{\n  render(){\n    return (\n      <BrowserRouter>\n        <div>\n          <nav>\n            <p> <Link to=\"/\"> Home </Link> </p>\n            <p> <Link to=\"/users\"> Users </Link> </p>\n          </nav>\n\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/users' exact component={Users} />\n            <Route component={NoMatch}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/*\nconst name = 'umeng';\n\nfunction getname(){\n  return 'hello ' + name\n}\n\nconst elm = <h1> {getname(name)} </h1>;\n\nReactDOM.render(elm, document.getElementById('test'));\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}